import java.util.Scanner;

public class Medic {
// membrii, var. clasei
  public String nume;
  public String prenume;
  public String ID;
  public int varsta;
  public int aniexp; //ani experienta
  public String departament; 
  public int IDdepartament;

// setMedic ~ constructor pt clasa Medic
// ~ op.1
  public Medic(String nume, String prenume, String ID, String departament) {
    this.nume = nume;
    this.prenume = prenume;
    this.ID = ID;
    this.departament = departament;
  }

// metodele clasei Medic
// acceseaza ID-ul departamentului si numele medicului
// ~ op.3 
  public int getIDdepartament() {
    return IDdepartament; }
 
  public String getnume() {
    return nume;
  }

// gaseste medic dupa ID  ???????????????
//public static void srchID(String ID) {
//Scanner sc = new Scanner(System.in);
//System.out.println("ID medic: ");
//ID = sc.nextLine();
//sc.nextLine(); }

// introd varsta afisare medie varsta
// ~ op.4
  public static double addVarsta(int vrs) {
    Scanner sc = new Scanner(System.in);
    System.out.println("Varsta: ");
    vrs = sc.nextInt();
    sc.nextInt();
    int sum = 0;
    sum += vrs; 
    return (double) sum / vrs;
  }

// afisare medie ani experienta
// ~ op.5
  public static double calculMedieAniExp(int[] anex) {
    int sum = 0;
    for (int ae : anex) 
    { sum += ae; }
    return (double) sum / anex.length;
  }



    public static void main (String[] args) {
      Scanner scan = new Scanner(System.in);
      int alege;
      //int varstamed;
      //varstamed = sc.nextInt();
      
      do {
        System.out.println("Meniu:");
        System.out.println("1. Introducere si afisare medic");
        System.out.println("2. Introdu numele si departamentul medicului");
        System.out.println("3. Gasiti medic dupa ID-ul departamentului");
        System.out.println("4. Introd varsta si afisare medie");
        System.out.println("5. Afisare medie ani experienta");
        System.out.println("6. Exit");
        System.out.print("Introd alegere: ");
        System.out.print("\n");
        alege = scan.nextInt();

      switch (alege) {
        case 1:
          //ob. din cls. princip., care va apela constructorul
          //instantiere obiect
          Medic m1 = new Medic("Marin ","Andrei ","3344 ","Oftalmologie ");
          m1.varsta = 33;
          m1.aniexp = 8;
          m1.IDdepartament = 5;

          Medic m2 = new Medic("Barbu ","Ioana ","6655 ", "Cardiologie ");
          m2.varsta = 26;
          m2.aniexp = 1;
          m2.IDdepartament = 6;
          
          System.out.println(m1.nume + m1.prenume + m1.ID + m1.departament);
          System.out.print("Varsta: " + m1.varsta);
          System.out.print(". Ani experienta: " + m1.aniexp);    
          System.out.println(". Id departament: " + m1.IDdepartament);

          System.out.println(m2.nume + m2.prenume + m2.ID + m2.departament);
          System.out.print("Varsta: " + m2.varsta);
          System.out.print(". Ani experienta: " + m2.aniexp);    
          System.out.print(". Id departament: " + m2.IDdepartament);
          break;

        case 2:
          String med;
          Scanner sc = new Scanner(System.in);
          med = sc.nextLine();
          System.out.println("Introdu nume: ");
          String nume = sc.nextLine();
          System.out.println("Introdu departament: ");
          String departament = sc.nextLine();
          // afisare date introduse
          System.out.println("Numele este: " + nume);
          System.out.println("Departamentul este: " + departament);
          break;

        case 3:
          int[] medicIdDep = {1, 2, 3};
          String[] medicNumePrenume = {"I. Andreea", "J. Cristian", "M. Ana"};
        
          Scanner scaner = new Scanner(System.in);
          System.out.print("Introdu un ID: ");
          int medIdD = scaner.nextInt();
          // string?
          // Cautare id medic
          int index = -1;
          for (int i = 0; i < medicIdDep.length; i++) 
          { if (medicIdDep[i] == medIdD) 
            { index = i;
              break; } }
          // Verificare id gasit
          if (index != -1) 
          { // id gasit -> afisare nume medic
            String medNumPre = medicNumePrenume[index];
            System.out.println("Numele si Prenumele medicului: " + medNumPre); } 
          else 
          { // id negasit -> eroare
            System.out.println("ID-ul medicului nu a fost gasit."); }
          //srchID(idm);
          //System.out.println(idm);
          break;

        case 4:
          int nr;
          System.out.println("Introdu nr.: ");
          Scanner s = new Scanner(System.in);
          nr = s.nextInt();
          int varstamed, suma = 0;
          float medie = 0;
          for(int i=0; i<nr; i++)
          { varstamed = s.nextInt();
            suma = suma + varstamed; }
          medie = suma / nr;
          System.out.println("media varstei: " + medie);
          //addVarsta(varstamed);
          //System.out.println(varstamed);
          break;

        case 5:
          int[] anex = {5, 3, 6, 11, 25};
          //incapsulare
          double medieAniExp = calculMedieAniExp(anex);
          System.out.println("Varsta medie: " + medieAniExp);
          break;
        
        case 6:
          System.out.println("Exiting...");
          break;
        default:
          System.out.println("Alegere invalida.");
      }
      System.out.println();
      } while (alege != 4);

      scan.close();
    }

           
}
